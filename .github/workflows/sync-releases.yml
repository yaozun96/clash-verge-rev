name: Sync Latest Upstream Release

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'  # 每6小时自动检测一次

permissions:
  contents: write

jobs:
  sync_latest_release:
    runs-on: ubuntu-latest
    steps:
      - name: 安装依赖
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq gh curl

      - name: 同步最新上游 Release
        env:
          SRC_REPO: clash-verge-rev/clash-verge-rev
          DST_REPO: yaozun96/clash-verge-rev
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "🚀 检查上游最新 Release..."
          latest_tag=$(gh release list -R "$SRC_REPO" --limit 1 | tail -n +2 | awk '{print $3}')

          if [[ -z "$latest_tag" ]]; then
            echo "❌ 未找到上游 release"
            exit 0
          fi

          echo "🔍 上游最新版本: $latest_tag"

          if gh release view "$latest_tag" -R "$DST_REPO" &>/dev/null; then
            echo "✅ 本地已存在，无需同步。"
            exit 0
          fi

          echo "📦 获取上游 release 信息..."
          gh release view "$latest_tag" -R "$SRC_REPO" --json name,body,assets > release.json

          name=$(jq -r '.name' release.json)
          body=$(jq -r '.body' release.json)

          echo "🧩 创建 release: $latest_tag"
          gh release create "$latest_tag" -R "$DST_REPO" -t "$name" -n "$body" || true

          assets=$(jq -r '.assets[].url' release.json)
          if [[ -z "$assets" ]]; then
            echo "⚠️ 无附件，跳过上传"
            exit 0
          fi

          echo "⬇️ 下载并上传附件..."
          for asset_url in $assets; do
            filename=$(basename "$asset_url")
            echo "📥 下载 $filename"
            curl -L -o "$filename" -H "Authorization: token $GITHUB_TOKEN" "$asset_url"
            echo "📤 上传 $filename"
