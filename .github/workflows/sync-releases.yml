name: Sync Upstream Releases (from clash-verge-rev)

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * *'  # 每天 03:00 UTC 自动执行

permissions:
  contents: write

jobs:
  sync_releases:
    runs-on: ubuntu-latest
    steps:
      - name: 安装依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y jq gh curl

      - name: 同步上游 Releases
        env:
          SRC_REPO: clash-verge-rev/clash-verge-rev
          DST_REPO: yaozun96/clash-verge-rev
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "🚀 开始同步上游 Releases..."
          gh release list -R "$SRC_REPO" --limit 100 > upstream_releases.txt

          while read -r line; do
            tag=$(echo "$line" | awk '{print $1}')
            if [[ -z "$tag" ]]; then
              continue
            fi
            echo "⚙️ 处理 Release: $tag"

            if gh release view "$tag" -R "$DST_REPO" &>/dev/null; then
              echo "✅ $tag 已存在，跳过"
              continue
            fi

            echo "📦 获取上游 Release 信息..."
            gh release view "$tag" -R "$SRC_REPO" --json name,body,assets > release.json
            name=$(jq -r '.name' release.json)
            body=$(jq -r '.body' release.json)

            echo "🧩 创建 Release: $tag"
            gh release create "$tag" -R "$DST_REPO" -t "$name" -n "$body" || true

            assets=$(jq -r '.assets[].url' release.json)
            if [[ -z "$assets" ]]; then
              echo "⚠️ 没有附件，跳过上传"
              continue
            fi

            echo "⬇️ 开始下载并上传附件..."
            for asset_url in $assets; do
              filename=$(basename "$asset_url")
              echo "📥 下载 $filename"
              curl -L -o "$filename" -H "Authorization: token $GITHUB_TOKEN" "$asset_url"
              echo "📤 上传 $filename"
              gh release upload "$tag" "$filename" -R "$DST_REPO" --clobber || true
            done

            echo "✅ 完成同步 $tag"
          done < upstream_releases.txt

          echo "🎉 所有 releases 已处理完毕。"
